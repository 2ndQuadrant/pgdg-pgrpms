--- repmgr.conf.sample.old	2016-10-07 12:30:32.799754257 +0300
+++ repmgr.conf.sample	2016-10-07 12:32:49.642534244 +0300
@@ -32,7 +32,9 @@
 #   https://www.postgresql.org/docs/current/static/libpq-connect.html#LIBPQ-CONNSTRING
 #
 #conninfo='host=192.168.204.104 dbname=repmgr user=repmgr'
-#
+
+conninfo='host=localhost dbname=repmgr_db user=repmgr_usr'
+
 # If repmgrd is in use, consider explicitly setting `connect_timeout` in the
 # conninfo string to determine the length of time which elapses before
 # a network connection attempt is abandoned; for details see:
@@ -72,7 +74,7 @@
 
 # stderr can be redirected to an arbitrary file:
 #
-#logfile='/var/log/repmgr/repmgr.log'
+logfile='/var/log/repmgr/repmgr-9.4.log
 
 # event notifications can be passed to an arbitrary external program
 # together with the following parameters:
@@ -99,7 +101,7 @@
 
 # path to PostgreSQL binary directory (location of pg_ctl, pg_basebackup etc.)
 # (if not provided, defaults to system $PATH)
-#pg_bindir=/usr/bin/
+pg_bindir=/usr/pgsql-9.4/bin/
 #
 # Debian/Ubuntu users: you will probably need to set this to the directory
 # where `pg_ctl` is located, e.g. /usr/lib/postgresql/9.4/bin/
@@ -123,11 +125,11 @@
 #       /usr/bin/systemctl start postgresql-9.4, \
 #       /usr/bin/systemctl restart postgresql-9.4
 #
-# service_start_command = systemctl start postgresql-9.4
-# service_stop_command = systemctl stop postgresql-9.4
-# service_restart_command = systemctl restart postgresql-9.4
-# service_reload_command = pg_ctlcluster 9.4 main reload
-# service_promote_command = pg_ctlcluster 9.4 main promote
+# service_start_command = systemctl start postgresql-9.4
+# service_stop_command = systemctl stop postgresql-9.4
+# service_restart_command = systemctl restart postgresql-9.4
+# service_reload_command = systemctl reload postgresql-9.4
+# service_promote_command = /usr/pgsql-9.4/bin/pg_ctl -D /var/lib/pgsql/9.4/data-standby promote
 
 # external command options
 
@@ -187,8 +189,8 @@
                     # a value of zero or less prevents the node being promoted to primary
                     # (default: 100)
 
-#promote_command='repmgr standby promote -f /path/to/repmgr.conf'
-#follow_command='repmgr standby follow -f /path/to/repmgr.conf -W'
+promote_command='/usr/pgsql-9.4/bin/repmgr standby promote -f /etc/repmgr/9.4/repmgr.conf'
+follow_command='/usr/pgsql-9.4/bin/repmgr standby follow -f /etc/repmgr/9.4/repmgr.conf'
 
 # change wait time for primary; before we bail out and exit when the primary
 # disappears, we wait 'reconnect_attempts' * 'retry_promote_interval_secs'
