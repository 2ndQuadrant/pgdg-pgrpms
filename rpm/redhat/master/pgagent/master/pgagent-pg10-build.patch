--- CMakeLists.txt.old	2017-10-18 09:29:24.630775665 +0100
+++ CMakeLists.txt	2017-10-18 09:30:07.860425635 +0100
@@ -176,7 +176,11 @@
 MESSAGE(STATUS "  Version                     : ${VERSION}")
 MESSAGE(STATUS " ")
 MESSAGE(STATUS "  PostgreSQL version string   : ${PG_VERSION_STRING}")
-MESSAGE(STATUS "  PostgreSQL version parts    : ${PG_MAJOR_VERSION}.${PG_MINOR_VERSION}.${PG_PATCH_VERSION}")
+IF(${PG_MAJOR_VERSION} GREATER 9)
+	MESSAGE(STATUS "  PostgreSQL version parts    : ${PG_MAJOR_VERSION}")
+ELSE()
+	MESSAGE(STATUS "  PostgreSQL version parts    : ${PG_MAJOR_VERSION}.${PG_MINOR_VERSION}")
+ENDIF(${PG_MAJOR_VERSION} GREATER 10)
 MESSAGE(STATUS "  PostgreSQL path             : ${PG_ROOT_DIR}")
 MESSAGE(STATUS "  PostgreSQL config binary    : ${PG_CONFIG_PATH}")
 MESSAGE(STATUS "  PostgreSQL include path     : ${PG_INCLUDE_DIRS}")
--- cmake/FindPG.cmake.old	2017-10-18 09:30:27.345267867 +0100
+++ cmake/FindPG.cmake	2017-10-18 09:31:06.926947373 +0100
@@ -28,7 +28,6 @@
 # PG_VERSION_STRING - The PostgreSQL version number.
 # PG_MAJOR_VERSION - The PostgreSQL major version (x in x.y.z).
 # PG_MINOR_VERSION - The PostgreSQL minor version (y in x.y.z).
-# PG_PATCH_VERSION - The PostgreSQL patch version (z in x.y.z).
 # PG_EXTENSION - Set to TRUE if PostgreSQL supports extensions.
 
 IF(NOT PG_STATIC OR PG_STATIC STREQUAL "")
@@ -70,8 +69,9 @@
     # Split the version into its component parts.
     STRING(REGEX MATCHALL "[0-9]+" PG_VERSION_PARTS "${PG_VERSION_STRING}")
     LIST(GET PG_VERSION_PARTS 0 PG_MAJOR_VERSION)
-    LIST(GET PG_VERSION_PARTS 1 PG_MINOR_VERSION)
-    LIST(GET PG_VERSION_PARTS 2 PG_PATCH_VERSION)
+    IF((PG_MAJOR_VERSION LESS 10))
+	LIST(GET PG_VERSION_PARTS 1 PG_MINOR_VERSION)
+    ENDIF((PG_MAJOR_VERSION LESS 10))
 
     # Are extensions supported?
     IF((PG_MAJOR_VERSION GREATER 9) OR ((PG_MAJOR_VERSION EQUAL 9) AND (PG_MINOR_VERSION GREATER 0)))
